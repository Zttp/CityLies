import { DisplayValueHeader, Color, Vector3 } from 'pixel_combats/basic';
import { Game, Map, MapEditor, Players, Inventory, LeaderBoard, BuildBlocksSet, Teams, Damage, BreackGraph, Ui, Properties, GameMode, Spawns, Timers, TeamsBalancer, Build, AreaService, AreaPlayerTriggerService, AreaViewService, Chat } from 'pixel_combats/room';

// –¶–≤–µ—Ç–∞ –∫–æ–º–∞–Ω–¥
const blueTeamColor = new Color(0, 0, 1, 0); // –°–∏–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
const redTeamColor = new Color(1, 0, 0, 0);  // –ö—Ä–∞—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
const kingColor = new Color(1, 1, 0, 0);     // –ó–æ–ª–æ—Ç–æ–π —Ü–≤–µ—Ç –¥–ª—è –∫–æ—Ä–æ–ª—è

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
Teams.Add('BlueKingdom', '–°–∏–Ω–µ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', blueTeamColor);
Teams.Add('RedKingdom', '–ö—Ä–∞—Å–Ω–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', redTeamColor);

const BlueTeam = Teams.Get('BlueKingdom');
const RedTeam = Teams.Get('RedKingdom');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥
BlueTeam.Build.BlocksSet.Value = BuildBlocksSet.Blue;
RedTeam.Build.BlocksSet.Value = BuildBlocksSet.Red;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ—Ä–æ–ª–µ–π
const Kings = {
    Blue: null,  // ID –∫–æ—Ä–æ–ª—è —Å–∏–Ω–µ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
    Red: null    // ID –∫–æ—Ä–æ–ª—è –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
LeaderBoard.PlayerLeaderBoardValues = [
    new DisplayValueHeader('Kills', '–£–±–∏–π—Å—Ç–≤–∞', '–£'),
    new DisplayValueHeader('Deaths', '–°–º–µ—Ä—Ç–∏', '–°'),
    new DisplayValueHeader('Scores', '–û—á–∫–∏', '–û'),
    new DisplayValueHeader('Role', '–†–æ–ª—å', '–†'),
    new DisplayValueHeader('Kingdom', '–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', '–ö')
];

LeaderBoard.PlayersWeightGetter.Set(function(p) {
    return p.Properties.Get('Scores').Value;
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä–æ–ª—è
function AssignKing(team, player) {
    // –°–Ω–∏–º–∞–µ–º –∫–æ—Ä–æ–Ω—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ—Ä–æ–ª—è
    if (team.name === 'BlueKingdom' && Kings.Blue) {
        const prevKing = Players.Get(Kings.Blue);
        if (prevKing) {
            prevKing.Properties.Get('Role').Value = '–ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω';
            prevKing.contextedProperties.SkinType.Value = 0;
            prevKing.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å –°–∏–Ω–µ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞';
        }
    } else if (team.name === 'RedKingdom' && Kings.Red) {
        const prevKing = Players.Get(Kings.Red);
        if (prevKing) {
            prevKing.Properties.Get('Role').Value = '–ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω';
            prevKing.contextedProperties.SkinType.Value = 0;
            prevKing.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å –ö—Ä–∞—Å–Ω–æ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞';
        }
    }

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–æ–ª—è
    if (team.name === 'BlueKingdom') {
        Kings.Blue = player.id;
    } else {
        Kings.Red = player.id;
    }

    // –î–∞–µ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∫–æ—Ä–æ–ª—è
    player.Properties.Get('Role').Value = '–ö–æ—Ä–æ–ª—å';
    player.contextedProperties.SkinType.Value = 4; // –û—Å–æ–±—ã–π —Å–∫–∏–Ω –¥–ª—è –∫–æ—Ä–æ–ª—è
    player.contextedProperties.MaxHp.Value = 200; // –£ –∫–æ—Ä–æ–ª—è –±–æ–ª—å—à–µ –∑–¥–æ—Ä–æ–≤—å—è
    player.inventory.Main.Value = true;
    player.inventory.MainInfinity.Value = true;
    player.inventory.Secondary.Value = true;
    player.inventory.SecondaryInfinity.Value = true;
    player.inventory.Melee.Value = true;
    player.inventory.Explosive.Value = true;
    player.inventory.ExplosiveInfinity.Value = true;
    
    // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö
    room.Ui.Hint.Value = `–ù–æ–≤—ã–π –∫–æ—Ä–æ–ª—å ${team.displayName}: ${player.NickName}!`;
    player.Ui.Hint.Value = `–í—ã —Å—Ç–∞–ª–∏ –∫–æ—Ä–æ–ª–µ–º ${team.displayName}! –ó–∞—â–∏—â–∞–π—Ç–µ —Å–≤–æ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ!`;
    player.Spawns.Spawn(); // –°–ø–∞–≤–Ω–∏–º –∫–æ—Ä–æ–ª—è
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–º–µ—Ä—Ç–∏ –∫–æ—Ä–æ–ª—è
function CheckKingDeath(killedPlayer) {
    if (killedPlayer.id === Kings.Blue) {
        // –ö–æ—Ä–æ–ª—å —Å–∏–Ω–µ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ —É–±–∏—Ç
        room.Ui.Hint.Value = `–ö–æ—Ä–æ–ª—å –°–∏–Ω–µ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ –ø–∞–ª –≤ –±–æ—é!`;
        killedPlayer.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å!';
        Kings.Blue = null;
        // –ù–∞–≥—Ä–∞–¥–∞ —É–±–∏–π—Ü–µ
        const killer = killedPlayer.Properties.Get('LastDamager').Value;
        if (killer) {
            const killerPlayer = Players.Get(killer);
            if (killerPlayer) {
                killerPlayer.Properties.Scores.Value += 1000;
                killerPlayer.Ui.Hint.Value = '–í—ã —É–±–∏–ª–∏ –∫–æ—Ä–æ–ª—è! +1000 –æ—á–∫–æ–≤';
            }
        }
    } else if (killedPlayer.id === Kings.Red) {
        // –ö–æ—Ä–æ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ —É–±–∏—Ç
        room.Ui.Hint.Value = `–ö–æ—Ä–æ–ª—å –ö—Ä–∞—Å–Ω–æ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ –ø–∞–ª –≤ –±–æ—é!`;
        killedPlayer.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å!';
        Kings.Red = null;
        // –ù–∞–≥—Ä–∞–¥–∞ —É–±–∏–π—Ü–µ
        const killer = killedPlayer.Properties.Get('LastDamager').Value;
        if (killer) {
            const killerPlayer = Players.Get(killer);
            if (killerPlayer) {
                killerPlayer.Properties.Scores.Value += 1000;
                killerPlayer.Ui.Hint.Value = '–í—ã —É–±–∏–ª–∏ –∫–æ—Ä–æ–ª—è! +1000 –æ—á–∫–æ–≤';
            }
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
Players.OnPlayerConnected.Add(function(p) {
    p.Spawns.Spawn();
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º RID –∏–≥—Ä–æ–∫–∞
    if (p.RoomID === 1) {
        // –ò–≥—Ä–æ–∫ —Å RID 1 —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ—Ä–æ–ª–µ–º —Å–∏–Ω–µ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
        BlueTeam.Add(p);
        AssignKing(BlueTeam, p);
    } else if (p.RoomID === 2) {
        // –ò–≥—Ä–æ–∫ —Å RID 2 —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–æ—Ä–æ–ª–µ–º –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
        RedTeam.Add(p);
        AssignKing(RedTeam, p);
    } else {
        // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —Å –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–æ–π
        if (BlueTeam.PlayersCount <= RedTeam.PlayersCount) {
            BlueTeam.Add(p);
        } else {
            RedTeam.Add(p);
        }
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–æ–π—Å—Ç–≤ –∏–≥—Ä–æ–∫–∞
    p.Properties.Get('Kills').Value = 0;
    p.Properties.Get('Deaths').Value = 0;
    p.Properties.Get('Scores').Value = 0;
    p.Properties.Get('Role').Value = '–ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω';
    p.Properties.Get('Kingdom').Value = p.Team.displayName;
    p.Properties.Get('Bounty').Value = 0;
    
    p.Spawns.Spawn(); // –°–ø–∞–≤–Ω–∏–º –∏–≥—Ä–æ–∫–∞
    p.Ui.Hint.Value = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏—Ç–≤—É –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤!';
});

Teams.OnPlayerChangeTeam.Add(function(p, oldTeam, newTeam) {
    // –ü—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–º–∞–Ω–¥—ã —Å–Ω–∏–º–∞–µ–º –∫–æ—Ä–æ–Ω—É, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –±—ã–ª –∫–æ—Ä–æ–ª–µ–º
    if (oldTeam && p.id === Kings[oldTeam.name === 'BlueKingdom' ? 'Blue' : 'Red']) {
        if (oldTeam.name === 'BlueKingdom') {
            Kings.Blue = null;
        } else {
            Kings.Red = null;
        }
        p.Properties.Get('Role').Value = '–ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω';
        p.contextedProperties.SkinType.Value = 0;
        room.Ui.Hint.Value = `${p.NickName} –ø–æ–∫–∏–Ω—É–ª —Ç—Ä–æ–Ω ${oldTeam.displayName}!`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–µ
    p.Properties.Get('Kingdom').Value = newTeam.displayName;
    
    // –ï—Å–ª–∏ –≤ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç –∫–æ—Ä–æ–ª—è, –Ω–∞–∑–Ω–∞—á–∞–µ–º
    if (newTeam.name === 'BlueKingdom' && !Kings.Blue && newTeam.PlayersCount > 0) {
        AssignKing(BlueTeam, p);
    } else if (newTeam.name === 'RedKingdom' && !Kings.Red && newTeam.PlayersCount > 0) {
        AssignKing(RedTeam, p);
    }
    
    p.Spawns.Spawn(); // –°–ø–∞–≤–Ω–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã
});

Damage.OnDeath.Add(function(p) {
    CheckKingDeath(p);
    p.Properties.Deaths.Value++;
    Spawns.GetContext(p).Spawn();
});

Damage.OnDamage.Add(function(p, dmgd, dmg) {
    // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–Ω–µ—Å—à–µ–≥–æ —É—Ä–æ–Ω
    dmgd.Properties.Get('LastDamager').Value = p.id;
    
    if (p.id !== dmgd.id) {
        p.Properties.Scores.Value += Math.ceil(dmg);
        p.Ui.Hint.Value = `–ù–∞–Ω–µ—Å–µ–Ω–Ω—ã–π —É—Ä–æ–Ω: ${Math.ceil(dmg)}`;
    }
});

Damage.OnKill.Add(function(p, k) {
    if (p.id !== k.id) {
        p.Properties.Kills.Value++;
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—á–∫–∏ –∑–∞ —É–±–∏–π—Å—Ç–≤–æ –∫–æ—Ä–æ–ª—è
        if (k.id === Kings.Blue || k.id === Kings.Red) {
            p.Properties.Scores.Value += 1000;
        } else {
            p.Properties.Scores.Value += 100;
        }
        
        // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –æ—Ö–æ—Ç—É
        if (k.Properties.Get('Bounty').Value > 0) {
            const bounty = k.Properties.Get('Bounty').Value;
            p.Properties.Scores.Value += bounty;
            room.Ui.Hint.Value = `üèÜ ${p.NickName} –ø–æ–ª—É—á–∏–ª –Ω–∞–≥—Ä–∞–¥—É ${bounty} –∑–∞ –≥–æ–ª–æ–≤—É ${k.NickName}!`;
            k.Properties.Get('Bounty').Value = 0;
            k.contextedProperties.GlowColor.Value = null;
        }
    }
});

// –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä–æ–ª–µ–π
const KingCheckTimer = Timers.GetContext().Get('KingCheck');
KingCheckTimer.OnTimer.Add(function(t) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω–µ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ
    if (BlueTeam.PlayersCount > 0 && !Kings.Blue) {
        // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
        let maxScore = -1;
        let newKing = null;
        
        for (const player of BlueTeam.Players) {
            if (player.Properties.Scores.Value > maxScore) {
                maxScore = player.Properties.Scores.Value;
                newKing = player;
            }
        }
        
        if (newKing) {
            AssignKing(BlueTeam, newKing);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞—Å–Ω–æ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ
    if (RedTeam.PlayersCount > 0 && !Kings.Red) {
        // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
        let maxScore = -1;
        let newKing = null;
        
        for (const player of RedTeam.Players) {
            if (player.Properties.Scores.Value > maxScore) {
                maxScore = player.Properties.Scores.Value;
                newKing = player;
            }
        }
        
        if (newKing) {
            AssignKing(RedTeam, newKing);
        }
    }
    
    KingCheckTimer.RestartLoop(30); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ UI
Ui.GetContext().TeamProp1.Value = { Team: "BlueKingdom", Prop: "Scores" };
Ui.GetContext().TeamProp2.Value = { Team: "RedKingdom", Prop: "Scores" };

Chat.OnMessage.Add(function(m) {
    let mt = m.Text.toLowerCase().trim();
    let sender = Players.GetByRoomId(m.Sender);
    let senderRole = sender.Properties.Get('Role').Value;
    let isKing = senderRole === "–ö–æ—Ä–æ–ª—å";

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –≥–æ–ª–æ–≤—É
    if (mt.startsWith('/bounty ') && isKing) {
        let args = mt.split(' ');
        if (args.length >= 3) {
            let targetId = Number(args[1]);
            let bountyAmount = Number(args[2]);
            let target = Players.GetByRoomId(targetId);
            
            if (target && target.Team !== sender.Team && bountyAmount > 0) {
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –≥–æ–ª–æ–≤—É
                target.Properties.Get('Bounty').Value = bountyAmount;
                room.Ui.Hint.Value = `üèπ –ö–æ—Ä–æ–ª—å ${sender.NickName} –æ–±—ä—è–≤–∏–ª –æ—Ö–æ—Ç—É –Ω–∞ ${target.NickName}! –ù–∞–≥—Ä–∞–¥–∞: ${bountyAmount} –∫—Ä–µ–¥–∏—Ç–æ–≤!`;
                
                // –ü–æ–º–µ—á–∞–µ–º —Ü–µ–ª—å –¥–ª—è –≤—Å–µ—Ö
                target.contextedProperties.GlowColor.Value = new Color(1, 0, 0, 0);
                target.Timers.Get('hunt_timer').Restart(300, () => {
                    target.Properties.Get('Bounty').Value = 0;
                    target.contextedProperties.GlowColor.Value = null;
                });
            }
        }
    }
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π
    else if (mt.startsWith('/appoint ') && isKing) {
        let args = mt.split(' ');
        if (args.length >= 3) {
            let targetId = Number(args[1]);
            let role = args[2];
            let target = Players.GetByRoomId(targetId);
            
            if (target && target.Team === sender.Team) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–æ–ª–∏
                const allowedRoles = ['–†—ã—Ü–∞—Ä—å', '–ì–≤–∞—Ä–¥–µ–µ—Ü', '–ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω', '–°–æ–≤–µ—Ç–Ω–∏–∫'];
                if (allowedRoles.includes(role)) {
                    target.Properties.Get('Role').Value = role;
                    Chat.BroadcastTeam(sender.Team, `üéñ –ö–æ—Ä–æ–ª—å ${sender.NickName} –Ω–∞–∑–Ω–∞—á–∏–ª ${target.NickName} –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å ${role}!`);
                    
                    // –î–∞–µ–º –±–æ–Ω—É—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
                    switch(role) {
                        case '–†—ã—Ü–∞—Ä—å':
                            target.contextedProperties.MaxHp.Value = 150;
                            target.inventory.Main.Value = true;
                            break;
                        case '–ì–≤–∞—Ä–¥–µ–µ—Ü':
                            target.contextedProperties.MaxHp.Value = 120;
                            target.inventory.Secondary.Value = true;
                            break;
                        case '–°–æ–≤–µ—Ç–Ω–∏–∫':
                            target.contextedProperties.MaxHp.Value = 100;
                            break;
                        default:
                            target.contextedProperties.MaxHp.Value = 80;
                    }
                } else {
                    sender.Ui.Hint.Value = "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å. –î–æ—Å—Ç—É–ø–Ω—ã–µ: –†—ã—Ü–∞—Ä—å, –ì–≤–∞—Ä–¥–µ–µ—Ü, –ö—Ä–µ—Å—Ç—å—è–Ω–∏–Ω, –°–æ–≤–µ—Ç–Ω–∏–∫";
                }
            }
        }
    }
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±–æ—Ä–∞ –Ω–∞–ª–æ–≥–æ–≤
    else if (mt.startsWith('/tax ') && isKing) {
        let taxRate = Number(mt.slice(5));
        if (taxRate >= 0 && taxRate <= 30) {
            let totalTax = 0;
            for (const player of sender.Team.Players) {
                if (player.Properties.Get('Role').Value !== "–ö–æ—Ä–æ–ª—å") {
                    let tax = Math.floor(player.Properties.Scores.Value * (taxRate / 100));
                    player.Properties.Scores.Value -= tax;
                    totalTax += tax;
                    player.Ui.Hint.Value = `üí∞ –ö–æ—Ä–æ–ª—å —Å–æ–±—Ä–∞–ª —Å –≤–∞—Å –Ω–∞–ª–æ–≥ ${tax} –∫—Ä–µ–¥–∏—Ç–æ–≤ (${taxRate}%)`;
                }
            }
            sender.Properties.Scores.Value += totalTax;
            Chat.BroadcastTeam(sender.Team, `üí∞ –ö–æ—Ä–æ–ª—å ${sender.NickName} —Å–æ–±—Ä–∞–ª –Ω–∞–ª–æ–≥ ${taxRate}% –∏ –ø–æ–ª—É—á–∏–ª ${totalTax} –∫—Ä–µ–¥–∏—Ç–æ–≤!`);
        } else {
            sender.Ui.Hint.Value = "–ù–∞–ª–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 30%";
        }
    }
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–º–æ—â–Ω–∏–∫–∞
    else if (mt.startsWith('/assistant ') && isKing) {
        let targetId = Number(mt.slice(11));
        let target = Players.GetByRoomId(targetId);
        
        if (target && target.Team === sender.Team) {
            target.Properties.Get('Role').Value = "–°–æ–≤–µ—Ç–Ω–∏–∫";
            target.contextedProperties.MaxHp.Value = 100;
            Chat.BroadcastTeam(sender.Team, `üéñ –ö–æ—Ä–æ–ª—å ${sender.NickName} –Ω–∞–∑–Ω–∞—á–∏–ª ${target.NickName} —Å–≤–æ–∏–º —Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º!`);
            target.Ui.Hint.Value = `–í—ã —Å—Ç–∞–ª–∏ —Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º –∫–æ—Ä–æ–ª—è! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–æ–≥–∞—Ç—å —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ–º.`;
        }
    }
    
    // –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
    else if (mt === '/help') {
        let helpMsg = `
<b>üõ† –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/info - –ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–∂–∏–º–∞
/roles - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π
/king - —Ç–µ–∫—É—â–∏–µ –∫–æ—Ä–æ–ª–∏
/teams - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥

<b>üëë –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/bounty [RID] [—Å—É–º–º–∞] - –æ–±—ä—è–≤–∏—Ç—å –æ—Ö–æ—Ç—É
/appoint [RID] [—Ä–æ–ª—å] - –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å
/tax [%] - —Å–æ–±—Ä–∞—Ç—å –Ω–∞–ª–æ–≥
/assistant [RID] - –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–æ–≤–µ—Ç–Ω–∏–∫–∞
`;
        sender.Ui.Hint.Value = helpMsg;
    }
});
