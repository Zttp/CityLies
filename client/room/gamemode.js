import { DisplayValueHeader, Color, Vector3 } from 'pixel_combats/basic';
import { Game, Map, MapEditor, Players, Inventory, LeaderBoard, BuildBlocksSet, Teams, Damage, BreackGraph, Ui, Properties, GameMode, Spawns, Timers, TeamsBalancer, Build, AreaService, AreaPlayerTriggerService, AreaViewService, Chat } from 'pixel_combats/room';

// –¶–≤–µ—Ç–∞ –∫–æ–º–∞–Ω–¥
const blueTeamColor = new Color(0, 0, 1, 0.3); // –°–∏–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
const redTeamColor = new Color(1, 0, 0, 0.3);  // –ö—Ä–∞—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
const kingColor = new Color(1, 1, 0, 0.5);     // –ó–æ–ª–æ—Ç–æ–π —Ü–≤–µ—Ç –¥–ª—è –∫–æ—Ä–æ–ª—è

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
Teams.Add('BlueKingdom', '–°–∏–Ω–µ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', blueTeamColor);
Teams.Add('RedKingdom', '–ö—Ä–∞—Å–Ω–æ–µ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', redTeamColor);

const BlueTeam = Teams.Get('BlueKingdom');
const RedTeam = Teams.Get('RedKingdom');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥
BlueTeam.Build.BlocksSet.Value = BuildBlocksSet.Blue;
RedTeam.Build.BlocksSet.Value = BuildBlocksSet.Red;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ—Ä–æ–ª–µ–π –∏ –¥—Ä—É–≥–∏—Ö —Ä–æ–ª–µ–π
const Kings = {
    Blue: null,  // ID –∫–æ—Ä–æ–ª—è —Å–∏–Ω–µ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
    Red: null    // ID –∫–æ—Ä–æ–ª—è –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
LeaderBoard.PlayerLeaderBoardValues = [
    new DisplayValueHeader('Kills', '–£–±–∏–π—Å—Ç–≤–∞', '–£'),
    new DisplayValueHeader('Deaths', '–°–º–µ—Ä—Ç–∏', '–°'),
    new DisplayValueHeader('Scores', '–û—á–∫–∏', '–û'),
    new DisplayValueHeader('Role', '–†–æ–ª—å', '–†'),
    new DisplayValueHeader('Kingdom', '–ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ', '–ö'),
    new DisplayValueHeader('Bounty', '–ù–∞–≥—Ä–∞–¥–∞', '–ù')
];

LeaderBoard.PlayersWeightGetter.Set(function(p) {
    return p.Properties.Get('Scores').Value;
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä–æ–ª—è
function AssignKing(team, player) {
    // –°–Ω–∏–º–∞–µ–º –∫–æ—Ä–æ–Ω—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ—Ä–æ–ª—è
    if (team.name === 'BlueKingdom' && Kings.Blue) {
        const prevKing = Players.Get(Kings.Blue);
        if (prevKing) {
            prevKing.Properties.Get('Role').Value = '–í–æ–∏–Ω';
            prevKing.contextedProperties.SkinType.Value = 0;
            prevKing.contextedProperties.GlowColor.Value = null;
            prevKing.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å –°–∏–Ω–µ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞';
        }
    } else if (team.name === 'RedKingdom' && Kings.Red) {
        const prevKing = Players.Get(Kings.Red);
        if (prevKing) {
            prevKing.Properties.Get('Role').Value = '–í–æ–∏–Ω';
            prevKing.contextedProperties.SkinType.Value = 0;
            prevKing.contextedProperties.GlowColor.Value = null;
            prevKing.Ui.Hint.Value = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–æ–ª—å –ö—Ä–∞—Å–Ω–æ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞';
        }
    }

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–æ–ª—è
    if (team.name === 'BlueKingdom') {
        Kings.Blue = player.id;
    } else {
        Kings.Red = player.id;
    }

    // –î–∞–µ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –∫–æ—Ä–æ–ª—è
    player.Properties.Get('Role').Value = '–ö–æ—Ä–æ–ª—å';
    player.contextedProperties.SkinType.Value = 4; // –û—Å–æ–±—ã–π —Å–∫–∏–Ω –¥–ª—è –∫–æ—Ä–æ–ª—è
    player.contextedProperties.GlowColor.Value = kingColor;
    player.contextedProperties.MaxHp.Value = 200; // –£ –∫–æ—Ä–æ–ª—è –±–æ–ª—å—à–µ –∑–¥–æ—Ä–æ–≤—å—è
    player.inventory.Main.Value = true;
    player.inventory.MainInfinity.Value = true;
    player.inventory.Secondary.Value = true;
    player.inventory.SecondaryInfinity.Value = true;
    player.inventory.Melee.Value = true;
    player.inventory.Explosive.Value = true;
    player.inventory.ExplosiveInfinity.Value = true;
    player.Properties.Get('CrownPower').Value = 3; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∏—Ö –ø—Ä–∏–∫–∞–∑–æ–≤
    
    // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ—Ö
    Chat.Broadcast(`üëë –ù–æ–≤—ã–π –∫–æ—Ä–æ–ª—å ${team.displayName}: ${player.NickName}!`);
    player.Ui.Hint.Value = `–í—ã —Å—Ç–∞–ª–∏ –∫–æ—Ä–æ–ª–µ–º ${team.displayName}! –ó–∞—â–∏—â–∞–π—Ç–µ —Å–≤–æ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ!`;
    
    // –°–ø–∞–≤–Ω–∏–º –∫–æ—Ä–æ–ª—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
    const thronePos = team.name === 'BlueKingdom' ? new Vector3(-50, 10, 0) : new Vector3(50, 10, 0);
    player.Position.Value = thronePos;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–º–µ—Ä—Ç–∏ –∫–æ—Ä–æ–ª—è
function CheckKingDeath(killedPlayer) {
    if (killedPlayer.id === Kings.Blue) {
        // –ö–æ—Ä–æ–ª—å —Å–∏–Ω–µ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ —É–±–∏—Ç
        Chat.Broadcast(`üíÄ –ö–æ—Ä–æ–ª—å –°–∏–Ω–µ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ –ø–∞–ª –≤ –±–æ—é!`);
        Kings.Blue = null;
        // –ù–∞–≥—Ä–∞–¥–∞ —É–±–∏–π—Ü–µ
        const killer = killedPlayer.Properties.Get('LastDamager').Value;
        if (killer) {
            const killerPlayer = Players.Get(killer);
            if (killerPlayer) {
                killerPlayer.Properties.Scores.Value += 1000;
                killerPlayer.Properties.Get('KingSlayer').Value = true;
                killerPlayer.Ui.Hint.Value = '–í—ã —É–±–∏–ª–∏ –∫–æ—Ä–æ–ª—è! +1000 –æ—á–∫–æ–≤';
                killerPlayer.contextedProperties.GlowColor.Value = new Color(1, 0.5, 0, 0.5);
            }
        }
    } else if (killedPlayer.id === Kings.Red) {
        // –ö–æ—Ä–æ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ —É–±–∏—Ç
        Chat.Broadcast(`üíÄ –ö–æ—Ä–æ–ª—å –ö—Ä–∞—Å–Ω–æ–≥–æ –ö–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞ –ø–∞–ª –≤ –±–æ—é!`);
        Kings.Red = null;
        // –ù–∞–≥—Ä–∞–¥–∞ —É–±–∏–π—Ü–µ
        const killer = killedPlayer.Properties.Get('LastDamager').Value;
        if (killer) {
            const killerPlayer = Players.Get(killer);
            if (killerPlayer) {
                killerPlayer.Properties.Scores.Value += 1000;
                killerPlayer.Properties.Get('KingSlayer').Value = true;
                killerPlayer.Ui.Hint.Value = '–í—ã —É–±–∏–ª–∏ –∫–æ—Ä–æ–ª—è! +1000 –æ—á–∫–æ–≤';
                killerPlayer.contextedProperties.GlowColor.Value = new Color(1, 0.5, 0, 0.5);
            }
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ø–∞–≤–Ω–∞ –∏–≥—Ä–æ–∫–∞
function SpawnPlayer(player) {
    if (!player.Team) return;
    
    let spawnPos;
    if (player.Properties.Get('Role').Value === '–ö–æ—Ä–æ–ª—å') {
        // –ö–æ—Ä–æ–ª–∏ —Å–ø–∞–≤–Ω—è—Ç—Å—è —É —Ç—Ä–æ–Ω–∞
        spawnPos = player.Team.name === 'BlueKingdom' ? 
            new Vector3(-50, 10, 0) : 
            new Vector3(50, 10, 0);
    } else {
        // –û–±—ã—á–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ —Å–ø–∞–≤–Ω—è—Ç—Å—è –≤ —Å–ª—É—á–∞–π–Ω–æ–º –º–µ—Å—Ç–µ –±–∞–∑—ã
        const baseX = player.Team.name === 'BlueKingdom' ? -50 : 50;
        spawnPos = new Vector3(
            baseX + (Math.random() * 20 - 10),
            5,
            Math.random() * 20 - 10
        );
    }
    
    player.Position.Value = spawnPos;
    player.contextedProperties.Hp.Value = player.contextedProperties.MaxHp.Value;
    player.Ui.Hint.Value = '–í—ã –∑–∞—Å–ø–∞–≤–Ω–µ–Ω—ã!';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
Players.OnPlayerConnected.Add(function(p) {
    p.Properties.Get('Kills').Value = 0;
    p.Properties.Get('Deaths').Value = 0;
    p.Properties.Get('Scores').Value = 0;
    p.Properties.Get('Role').Value = '–í–æ–∏–Ω';
    p.Properties.Get('Bounty').Value = 0;
    p.Properties.Get('Votes').Value = 0;
    p.Properties.Get('KingSlayer').Value = false;
    p.Properties.Get('CrownPower').Value = 0;
    
    p.Ui.Hint.Value = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏—Ç–≤—É –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤! –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥';
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
    if (BlueTeam.PlayersCount <= RedTeam.PlayersCount) {
        BlueTeam.Add(p);
    } else {
        RedTeam.Add(p);
    }
    
    SpawnPlayer(p);
});

Teams.OnPlayerAdded.Add(function(p, t) {
    p.Properties.Get('Kingdom').Value = t.displayName;
    p.Ui.Hint.Value = `–í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ ${t.displayName}!`;
    
    // –ï—Å–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç –∫–æ—Ä–æ–ª—è, –Ω–∞–∑–Ω–∞—á–∞–µ–º
    if (t.name === 'BlueKingdom' && !Kings.Blue) {
        AssignKing(t, p);
    } else if (t.name === 'RedKingdom' && !Kings.Red) {
        AssignKing(t, p);
    }
    
    SpawnPlayer(p);
});

Teams.OnPlayerChangeTeam.Add(function(p, oldTeam, newTeam) {
    // –ü—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–º–∞–Ω–¥—ã —Å–Ω–∏–º–∞–µ–º –∫–æ—Ä–æ–Ω—É, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –±—ã–ª –∫–æ—Ä–æ–ª–µ–º
    if (oldTeam && p.id === Kings[oldTeam.name === 'BlueKingdom' ? 'Blue' : 'Red']) {
        if (oldTeam.name === 'BlueKingdom') {
            Kings.Blue = null;
        } else {
            Kings.Red = null;
        }
        p.Properties.Get('Role').Value = '–í–æ–∏–Ω';
        p.contextedProperties.SkinType.Value = 0;
        p.contextedProperties.GlowColor.Value = null;
        Chat.Broadcast(`${p.NickName} –ø–æ–∫–∏–Ω—É–ª —Ç—Ä–æ–Ω ${oldTeam.displayName}!`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    newTeam.Add(p);
    p.Properties.Get('Kingdom').Value = newTeam.displayName;
    
    // –ï—Å–ª–∏ –≤ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç –∫–æ—Ä–æ–ª—è, –Ω–∞–∑–Ω–∞—á–∞–µ–º
    if (newTeam.name === 'BlueKingdom' && !Kings.Blue) {
        AssignKing(newTeam, p);
    } else if (newTeam.name === 'RedKingdom' && !Kings.Red) {
        AssignKing(newTeam, p);
    }
    
    SpawnPlayer(p);
});

Damage.OnDeath.Add(function(p) {
    CheckKingDeath(p);
    p.Properties.Deaths.Value++;
    
    // –°–±—Ä–æ—Å –±–∞—É–Ω—Ç–∏ –ø—Ä–∏ —Å–º–µ—Ä—Ç–∏
    if (p.Properties.Get('Bounty').Value > 0) {
        p.Properties.Get('Bounty').Value = 0;
        p.contextedProperties.GlowColor.Value = null;
    }
    
    SpawnPlayer(p);
});

Damage.OnDamage.Add(function(p, dmgd, dmg) {
    // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–Ω–µ—Å—à–µ–≥–æ —É—Ä–æ–Ω
    dmgd.Properties.Get('LastDamager').Value = p.id;
    
    if (p.id !== dmgd.id) {
        const damageScore = Math.ceil(dmg);
        p.Properties.Scores.Value += damageScore;
        p.Ui.Hint.Value = `–ù–∞–Ω–µ—Å–µ–Ω–Ω—ã–π —É—Ä–æ–Ω: ${damageScore}`;
        
        // –ï—Å–ª–∏ –∞—Ç–∞–∫–æ–≤–∞–ª–∏ –∫–æ—Ä–æ–ª—è - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
        if (dmgd.Properties.Get('Role').Value === '–ö–æ—Ä–æ–ª—å') {
            p.Properties.Scores.Value += 50;
            p.Ui.Hint.Value = `–í—ã –∞—Ç–∞–∫–æ–≤–∞–ª–∏ –∫–æ—Ä–æ–ª—è! +${damageScore + 50} –æ—á–∫–æ–≤`;
        }
    }
});

Damage.OnKill.Add(function(p, k) {
    if (p.id !== k.id) {
        p.Properties.Kills.Value++;
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—á–∫–∏ –∑–∞ —É–±–∏–π—Å—Ç–≤–æ –∫–æ—Ä–æ–ª—è
        if (k.id === Kings.Blue || k.id === Kings.Red) {
            p.Properties.Scores.Value += 1000;
            p.Properties.Get('KingSlayer').Value = true;
        } else {
            p.Properties.Scores.Value += 100;
        }
        
        // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –±–∞—É–Ω—Ç–∏
        if (k.Properties.Get('Bounty').Value > 0) {
            const bounty = k.Properties.Get('Bounty').Value;
            p.Properties.Scores.Value += bounty;
            Chat.Broadcast(`üèÜ ${p.NickName} –ø–æ–ª—É—á–∏–ª –Ω–∞–≥—Ä–∞–¥—É ${bounty} –∑–∞ –≥–æ–ª–æ–≤—É ${k.NickName}!`);
        }
    }
});

// –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä–æ–ª–µ–π
const KingCheckTimer = Timers.GetContext().Get('KingCheck');
KingCheckTimer.OnTimer.Add(function(t) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω–µ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ
    if (BlueTeam.PlayersCount > 0 && !Kings.Blue) {
        // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
        let maxScore = -1;
        let newKing = null;
        
        for (const player of BlueTeam.Players) {
            const score = player.Properties.Scores.Value;
            if (score > maxScore || (score === maxScore && Math.random() > 0.5)) {
                maxScore = score;
                newKing = player;
            }
        }
        
        if (newKing) {
            AssignKing(BlueTeam, newKing);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞—Å–Ω–æ–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ
    if (RedTeam.PlayersCount > 0 && !Kings.Red) {
        // –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
        let maxScore = -1;
        let newKing = null;
        
        for (const player of RedTeam.Players) {
            const score = player.Properties.Scores.Value;
            if (score > maxScore || (score === maxScore && Math.random() > 0.5)) {
                maxScore = score;
                newKing = player;
            }
        }
        
        if (newKing) {
            AssignKing(RedTeam, newKing);
        }
    }
    
    KingCheckTimer.RestartLoop(30); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
});

// –¢–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π —Å–∏–ª—ã
const CrownPowerTimer = Timers.GetContext().Get('CrownPower');
CrownPowerTimer.OnTimer.Add(function(t) {
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–π —Å–∏–ª—ã
    if (Kings.Blue) {
        const blueKing = Players.Get(Kings.Blue);
        if (blueKing && blueKing.Properties.Get('CrownPower').Value < 3) {
            blueKing.Properties.Get('CrownPower').Value++;
        }
    }
    if (Kings.Red) {
        const redKing = Players.Get(Kings.Red);
        if (redKing && redKing.Properties.Get('CrownPower').Value < 3) {
            redKing.Properties.Get('CrownPower').Value++;
        }
    }
    
    CrownPowerTimer.RestartLoop(60); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ UI
Ui.GetContext().TeamProp1.Value = { Team: "BlueKingdom", Prop: "Scores" };
Ui.GetContext().TeamProp2.Value = { Team: "RedKingdom", Prop: "Scores" };

// ======================= üìú –ß–ê–¢–û–í–´–ï –ö–û–ú–ê–ù–î–´ =======================
Chat.OnMessage.Add(function(m) {
    let mt = m.Text.toLowerCase().trim();
    let sender = Players.GetByRoomId(m.Sender);
    if (!sender) return;
    
    let senderRole = sender.Properties.Get('Role').Value;
    let isKing = senderRole === "–ö–æ—Ä–æ–ª—å";
    let isRoyalGuard = senderRole === "–ì–≤–∞—Ä–¥–µ–µ—Ü";
    let isKnight = senderRole === "–†—ã—Ü–∞—Ä—å";
    let isRebel = senderRole === "–ú—è—Ç–µ–∂–Ω–∏–∫";
    let isCitizen = senderRole === "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω";

    // ======================= üõ† –û–ë–©–ò–ï –ö–û–ú–ê–ù–î–´ (–í–°–ï–ú) =======================
    if (mt === '/help') {
        let helpMsg = `
<b>üõ† –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/info - –ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–∂–∏–º–∞
/roles - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–æ–ª–µ–π
/king - —Ç–µ–∫—É—â–∏–µ –∫–æ—Ä–æ–ª–∏
/teams - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥
/rtd - —Ä—É–ª–µ—Ç–∫–∞ (1-100 –∫—Ä–µ–¥–∏—Ç–æ–≤)
/achievements - –≤–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
/emote [—Ç–µ–∫—Å—Ç] - –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç –ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
/me [–¥–µ–π—Å—Ç–≤–∏–µ] - –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
/dance - –∏—Å–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–Ω–µ—Ü
/taunt - –æ—Å–∫–æ—Ä–±–∏—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞

<b>üë• –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ:</b>
/vote [–Ω–∏–∫] - –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –∏–≥—Ä–æ–∫–∞
/gift [RID] [—Å—É–º–º–∞] - –ø–æ–¥–∞—Ä–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
/challenge [RID] - –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å
/party [RID] - –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É
/friend [RID] - –¥–æ–±–∞–≤–∏—Ç—å –≤ –¥—Ä—É–∑—å—è
`;

        if (isKing) helpMsg += `
<b>üëë –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/appoint [RID] [–¥–æ–ª–∂–Ω–æ—Å—Ç—å] - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –Ω–∞ –ø–æ—Å—Ç
/decree [—Ç–µ–∫—Å—Ç] - –∏–∑–¥–∞—Ç—å —É–∫–∞–∑
/tax [%] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ª–æ–≥
/hunt [RID] - –æ–±—ä—è–≤–∏—Ç—å –æ—Ö–æ—Ç—É
/reward [RID] [—Å—É–º–º–∞] - –Ω–∞–≥—Ä–∞–¥–∏—Ç—å
/pardon [RID] - –ø–æ–º–∏–ª–æ–≤–∞—Ç—å –º—è—Ç–µ–∂–Ω–∏–∫–∞
/banish [RID] - –∏–∑–≥–Ω–∞—Ç—å –∏–∑ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞
/war - –æ–±—ä—è–≤–∏—Ç—å –≤–æ–π–Ω—É
/peace - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–µ—Ä–µ–º–∏—Ä–∏–µ
/throne - —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ —Ç—Ä–æ–Ω—É
/crown - –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è —Å–∏–ª–∞ (${sender.Properties.Get('CrownPower').Value}/3)
`;

        if (isRoyalGuard) helpMsg += `
<b>üõ° –ö–æ–º–∞–Ω–¥—ã –≥–≤–∞—Ä–¥–∏–∏:</b>
/protect - –∑–∞—â–∏—Ç–∏—Ç—å –∫–æ—Ä–æ–ª—è (+10HP)
/check [RID] - –æ–±—ã—Å–∫–∞—Ç—å –∏–≥—Ä–æ–∫–∞
/arrest [RID] - –∞—Ä–µ—Å—Ç–æ–≤–∞—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è
/guard - —Ä–µ–∂–∏–º –æ—Ö—Ä–∞–Ω—ã
`;

        if (isKnight) helpMsg += `
<b>‚öîÔ∏è –†—ã—Ü–∞—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/oath - –ø—Ä–∏–Ω–µ—Å—Ç–∏ –∫–ª—è—Ç–≤—É –≤–µ—Ä–Ω–æ—Å—Ç–∏
/train - —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–±—Ä–∞–Ω—Ü–µ–≤
/patrol - –Ω–∞—á–∞—Ç—å –ø–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
/duel [RID] - –≤—ã–∑–≤–∞—Ç—å –Ω–∞ —á–µ—Å—Ç–Ω—ã–π –±–æ–π
/honor - –ø–æ–∫–∞–∑–∞—Ç—å —á–µ—Å—Ç—å
`;

        if (isRebel) helpMsg += `
<b>üé≠ –ö–æ–º–∞–Ω–¥—ã –º—è—Ç–µ–∂–Ω–∏–∫–æ–≤:</b>
/rebellion - –Ω–∞—á–∞—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–∏–µ
/hideme - —Å–∫—Ä—ã—Ç—å—Å—è –Ω–∞ 30 —Å–µ–∫
/sabotage - —Å–∞–±–æ—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏
/spy [RID] - —à–ø–∏–æ–Ω–∏—Ç—å –∑–∞ –∏–≥—Ä–æ–∫–æ–º
/steal [RID] - —É–∫—Ä–∞—Å—Ç—å –∫—Ä–µ–¥–∏—Ç—ã
`;

        sender.Ui.Hint.Value = helpMsg;
    }

    // ======================= üëë –ö–û–†–û–õ–ï–í–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ =======================
    else if (mt.startsWith('/hunt ') && isKing) {
        let targetId = Number(mt.slice(6));
        let target = Players.GetByRoomId(targetId);
        
        if (target && target.Team !== sender.Team && sender.Properties.Get('CrownPower').Value > 0) {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –≥–æ–ª–æ–≤—É
            target.Properties.Get('Bounty').Value = 1000;
            target.contextedProperties.GlowColor.Value = new Color(1, 0, 0, 0.7);
            Chat.Broadcast(`üèπ –ö–æ—Ä–æ–ª—å ${sender.NickName} –æ–±—ä—è–≤–∏–ª –æ—Ö–æ—Ç—É –Ω–∞ ${target.NickName}! –ù–∞–≥—Ä–∞–¥–∞: 1000 –∫—Ä–µ–¥–∏—Ç–æ–≤!`);
            
            // –ü–æ–º–µ—á–∞–µ–º —Ü–µ–ª—å –¥–ª—è –≤—Å–µ—Ö
            sender.Properties.Get('CrownPower').Value--;
            
            // –¢–∞–π–º–µ—Ä –æ—Ö–æ—Ç—ã
            target.Timers.Get('hunt_timer').Restart(300, () => {
                target.Properties.Get('Bounty').Value = 0;
                target.contextedProperties.GlowColor.Value = null;
                Chat.Broadcast(`üïí –û—Ö–æ—Ç–∞ –Ω–∞ ${target.NickName} –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.`);
            });
        }
    }

    else if (mt.startsWith('/appoint ') && isKing) {
        let args = mt.split(' ');
        if (args.length >= 3 && sender.Properties.Get('CrownPower').Value > 0) {
            let targetId = Number(args[1]);
            let position = args[2].toLowerCase();
            let target = Players.GetByRoomId(targetId);
            
            if (target && target.Team === sender.Team) {
                sender.Properties.Get('CrownPower').Value--;
                
                switch(position) {
                    case 'guard':
                    case '–≥–≤–∞—Ä–¥–µ–µ—Ü':
                        if (countTeamRole(sender.Team, "–ì–≤–∞—Ä–¥–µ–µ—Ü") < 3) {
                            target.Properties.Get('Role').Value = "–ì–≤–∞—Ä–¥–µ–µ—Ü";
                            target.contextedProperties.MaxHp.Value = 150;
                            target.contextedProperties.GlowColor.Value = new Color(0, 0, 1, 0.3);
                            Chat.BroadcastTeam(sender.Team, `üõ° ${target.NickName} –Ω–∞–∑–Ω–∞—á–µ–Ω –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–º –ì–≤–∞—Ä–¥–µ–π—Ü–µ–º!`);
                        } else {
                            sender.Ui.Hint.Value = "–£–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–≤–∞—Ä–¥–µ–π—Ü–µ–≤ (3)!";
                            sender.Properties.Get('CrownPower').Value++;
                        }
                        break;
                    case 'knight':
                    case '—Ä—ã—Ü–∞—Ä—å':
                        if (countTeamRole(sender.Team, "–†—ã—Ü–∞—Ä—å") < 5) {
                            target.Properties.Get('Role').Value = "–†—ã—Ü–∞—Ä—å";
                            target.contextedProperties.MaxHp.Value = 120;
                            target.contextedProperties.GlowColor.Value = new Color(0.5, 0.5, 1, 0.2);
                            Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è ${target.NickName} –ø–æ—Å–≤—è—â–µ–Ω –≤ –†—ã—Ü–∞—Ä–∏!`);
                        } else {
                            sender.Ui.Hint.Value = "–£–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ã—Ü–∞—Ä–µ–π (5)!";
                            sender.Properties.Get('CrownPower').Value++;
                        }
                        break;
                    case 'jester':
                    case '—à—É—Ç':
                        target.Properties.Get('Role').Value = "–®—É—Ç";
                        target.contextedProperties.MaxHp.Value = 80;
                        target.contextedProperties.GlowColor.Value = new Color(1, 0, 1, 0.3);
                        Chat.BroadcastTeam(sender.Team, `üé≠ ${target.NickName} —Å—Ç–∞–ª –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–º –®—É—Ç–æ–º!`);
                        break;
                }
            }
        }
    }

    else if (mt.startsWith('/tax ') && isKing) {
        let taxRate = Number(mt.slice(5));
        if (taxRate >= 0 && taxRate <= 30) {
            sender.Team.Properties.Get('TaxRate').Value = taxRate;
            Chat.BroadcastTeam(sender.Team, `üí∞ –ö–æ—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∏–ª –Ω–∞–ª–æ–≥ ${taxRate}% –Ω–∞ –≤—Å–µ –¥–æ—Ö–æ–¥—ã!`);
        }
    }

    else if (mt === '/throne' && isKing) {
        const thronePos = sender.Team.name === 'BlueKingdom' ? 
            new Vector3(-50, 10, 0) : 
            new Vector3(50, 10, 0);
        sender.Position.Value = thronePos;
        sender.Ui.Hint.Value = "–í—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫ —Ç—Ä–æ–Ω—É!";
    }

    else if (mt === '/crown' && isKing) {
        sender.Ui.Hint.Value = `–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è —Å–∏–ª–∞: ${sender.Properties.Get('CrownPower').Value}/3 (–≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É)`;
    }

    // ======================= ‚öîÔ∏è –†–´–¶–ê–†–°–ö–ò–ï –ö–û–ú–ê–ù–î–´ =======================
    else if (mt === '/oath' && isKnight) {
        sender.Ui.Hint.Value = "‚öîÔ∏è –í—ã –∫–ª—è–Ω–µ—Ç–µ—Å—å –∑–∞—â–∏—â–∞—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–æ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–∞–ø–ª–∏ –∫—Ä–æ–≤–∏!";
        Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è –†—ã—Ü–∞—Ä—å ${sender.NickName} –ø—Ä–∏–Ω–æ—Å–∏—Ç –∫–ª—è—Ç–≤—É –≤–µ—Ä–Ω–æ—Å—Ç–∏!`);
        sender.contextedProperties.MaxHp.Value += 10;
    }

    else if (mt === '/train' && isKnight) {
        let nearbyCitizens = sender.Team.Players.filter(p => 
            p.Properties.Get('Role').Value === "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω" &&
            Vector3.Distance(p.Position.Value, sender.Position.Value) < 10
        );
        
        nearbyCitizens.forEach(citizen => {
            citizen.Properties.Scores.Value += 50;
            citizen.Ui.Hint.Value = `üéñ –†—ã—Ü–∞—Ä—å ${sender.NickName} —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç –≤–∞—Å! +50 –∫—Ä–µ–¥–∏—Ç–æ–≤`;
        });
        
        if (nearbyCitizens.length > 0) {
            sender.Ui.Hint.Value = `üéñ –í—ã –æ–±—É—á–∏–ª–∏ ${nearbyCitizens.length} –≥—Ä–∞–∂–¥–∞–Ω!`;
        }
    }

    else if (mt === '/honor' && isKnight) {
        Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è –†—ã—Ü–∞—Ä—å ${sender.NickName} –æ—Ç–¥–∞–µ—Ç —á–µ—Å—Ç—å –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤—É!`);
        sender.Ui.Hint.Value = "–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é —á–µ—Å—Ç—å –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ!";
    }

    // ======================= üé≠ –ö–û–ú–ê–ù–î–´ –ú–Ø–¢–ï–ñ–ù–ò–ö–û–í =======================
    else if (mt === '/sabotage' && isRebel) {
        let enemyBuildings = Map.FindBlocksInRadius(sender.Position.Value, 15)
            .filter(b => b.Team !== sender.Team);
        
        if (enemyBuildings.length > 0) {
            enemyBuildings.forEach(b => {
                b.Health.Value -= 50;
            });
            Chat.Broadcast(`üí£ ${sender.NickName} —Å–∞–±–æ—Ç–∏—Ä—É–µ—Ç –≤—Ä–∞–∂–µ—Å–∫–∏–µ –ø–æ—Å—Ç—Ä–æ–π–∫–∏!`);
        }
    }

    else if (mt === '/hideme' && isRebel) {
        sender.contextedProperties.Invisible.Value = true;
        Chat.Broadcast(`üëª ${sender.NickName} –∏—Å—á–µ–∑–∞–µ—Ç –≤ —Ç–µ–Ω—è—Ö...`);
        
        sender.Timers.Get('hide_timer').Restart(30, () => {
            sender.contextedProperties.Invisible.Value = false;
            sender.Ui.Hint.Value = "–í–∞—à–∞ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å!";
        });
    }

    // ======================= üë• –°–û–¶–ò–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´ =======================
    else if (mt.startsWith('/vote ') && !isKing) {
        let targetId = Number(mt.slice(6));
        let target = Players.GetByRoomId(targetId);
        
        if (target && target.Team === sender.Team) {
            target.Properties.Get('Votes').Value++;
            sender.Ui.Hint.Value = `üó≥ –í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ ${target.NickName}`;
            
            // –ï—Å–ª–∏ –Ω–∞–±—Ä–∞–Ω–æ 5 –≥–æ–ª–æ—Å–æ–≤ - –ø–æ–≤—ã—à–µ–Ω–∏–µ –¥–æ —Ä—ã—Ü–∞—Ä—è
            if (target.Properties.Get('Votes').Value >= 5 && 
                target.Properties.Get('Role').Value === "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω") {
                target.Properties.Get('Role').Value = "–†—ã—Ü–∞—Ä—å";
                target.contextedProperties.MaxHp.Value = 120;
                Chat.BroadcastTeam(target.Team, `‚öîÔ∏è ${target.NickName} –ø–æ–ª—É—á–∏–ª —Ä—ã—Ü–∞—Ä—Å–∫–æ–µ –∑–≤–∞–Ω–∏–µ –ø–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—é!`);
            }
        }
    }

    else if (mt.startsWith('/challenge ') && !isRebel) {
        let targetId = Number(mt.slice(10));
        let target = Players.GetByRoomId(targetId);
        
        if (target && target.Team === sender.Team) {
            Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è ${sender.NickName} –≤—ã–∑—ã–≤–∞–µ—Ç ${target.NickName} –Ω–∞ –¥—É—ç–ª—å!`);
            target.Ui.Hint.Value = `‚öîÔ∏è –í–∞—Å –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ –¥—É—ç–ª—å! –ù–∞–ø–∏—à–∏—Ç–µ /accept ${sender.RoomID} —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å`;
            sender.Timers.Get('duel_timer').Restart(30, () => {
                sender.Ui.Hint.Value = "‚åõ –í—Ä–µ–º—è –¥—É—ç–ª–∏ –∏—Å—Ç–µ–∫–ª–æ";
            });
        }
    }

    else if (mt.startsWith('/accept ') && !isRebel) {
        let challengerId = Number(mt.slice(8));
        let challenger = Players.GetByRoomId(challengerId);
        
        if (challenger && challenger.Team === sender.Team) {
            Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è ${sender.NickName} –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—ã–∑–æ–≤ ${challenger.NickName}!`);
            
            // –°–æ–∑–¥–∞–µ–º –∞—Ä–µ–Ω—É –¥–ª—è –¥—É—ç–ª–∏
            let duelArenaPos = new Vector3(0, 50, 0); // –¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã
            challenger.Position.Value = duelArenaPos;
            sender.Position.Value = duelArenaPos;
            
            // –í–∫–ª—é—á–∞–µ–º PvP –º–µ–∂–¥—É –Ω–∏–º–∏
            challenger.Damage.FriendlyFire.Value = true;
            sender.Damage.FriendlyFire.Value = true;
            
            // –ß–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            Timers.Get(`duel_end_${challengerId}_${sender.RoomID}`).Restart(30, () => {
                challenger.Damage.FriendlyFire.Value = false;
                sender.Damage.FriendlyFire.Value = false;
                Chat.BroadcastTeam(sender.Team, `‚öîÔ∏è –î—É—ç–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
                SpawnPlayer(challenger);
                SpawnPlayer(sender);
            });
        }
    }

    // ======================= üé≤ –ú–ò–ù–ò-–ò–ì–†–´ –ò –†–ê–ó–í–õ–ï–ß–ï–ù–ò–Ø =======================
    else if (mt === '/dice') {
        let roll = Math.floor(Math.random() * 6) + 1;
        Chat.Broadcast(`üé≤ ${sender.NickName} –±—Ä–æ—Å–∞–µ—Ç –∫–æ—Å—Ç–∏: –≤—ã–ø–∞–ª–æ ${roll}!`);
        
        if (roll === 6) {
            sender.Properties.Scores.Value += 100;
            sender.Ui.Hint.Value = "üéâ –ö—Ä–∏—Ç! +100 –∫—Ä–µ–¥–∏—Ç–æ–≤";
        }
    }

    else if (mt === '/coin') {
        let side = Math.random() > 0.5 ? "–û—Ä–µ–ª" : "–†–µ—à–∫–∞";
        Chat.Broadcast(`ü™ô ${sender.NickName} –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É: ${side}!`);
        
        if (sender.Properties.Get('Guess') && sender.Properties.Get('Guess').Value === side) {
            sender.Properties.Scores.Value += 50;
            sender.Ui.Hint.Value = "‚úÖ –£–≥–∞–¥–∞–ª! +50 –∫—Ä–µ–¥–∏—Ç–æ–≤";
        }
    }

    else if (mt === '/rtd') {
        let bet = Math.min(100, Math.max(1, sender.Properties.Scores.Value));
        let roll = Math.floor(Math.random() * 100) + 1;
        
        if (roll > 90) {
            let win = bet * 5;
            sender.Properties.Scores.Value += win;
            Chat.Broadcast(`üé∞ ${sender.NickName} –≤—ã–∏–≥—Ä–∞–ª –î–∂–ï–ö–ü–û–¢ ${win} –∫—Ä–µ–¥–∏—Ç–æ–≤ (x5)!`);
        } else if (roll > 60) {
            let win = bet * 2;
            sender.Properties.Scores.Value += win;
            Chat.Broadcast(`üé∞ ${sender.NickName} –≤—ã–∏–≥—Ä–∞–ª ${win} –∫—Ä–µ–¥–∏—Ç–æ–≤ (x2)!`);
        } else {
            sender.Properties.Scores.Value -= bet;
            Chat.Broadcast(`üé∞ ${sender.NickName} –ø—Ä–æ–∏–≥—Ä–∞–ª ${bet} –∫—Ä–µ–¥–∏—Ç–æ–≤...`);
        }
    }

    else if (mt.startsWith('/me ')) {
        let action = m.Text.slice(4);
        Chat.Broadcast(`* ${sender.NickName} ${action}`);
    }

    else if (mt === '/dance') {
        let dances = [
            "–∏—Å–ø–æ–ª–Ω—è–µ—Ç –∑–∞–∂–∏–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ç–∞–Ω–µ—Ü!",
            "–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ –ø–ª—è—Å!",
            "—Ç–∞–Ω—Ü—É–µ—Ç –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π!",
            "–≤—ã–¥–µ–ª—ã–≤–∞–µ—Ç –ø–∞!",
            "–∑–∞–∂–∏–≥–∞–µ—Ç –Ω–∞ —Ç–∞–Ω—Ü–ø–æ–ª–µ!"
        ];
        let dance = dances[Math.floor(Math.random() * dances.length)];
        Chat.Broadcast(`üíÉ ${sender.NickName} ${dance}`);
    }

    else if (mt === '/taunt') {
        let taunts = [
            "–Ω–∞—Å–º–µ—Ö–∞–µ—Ç—Å—è –Ω–∞–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞–º–∏!",
            "–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —è–∑—ã–∫ –≤—Ä–∞–≥–∞–º!",
            "–≤—ã—Å–º–µ–∏–≤–∞–µ—Ç –Ω–∞–≤—ã–∫–∏ –æ–ø–ø–æ–Ω–µ–Ω—Ç–æ–≤!",
            "–¥—Ä–∞–∑–Ω–∏—Ç —Å–≤–æ–∏—Ö –≤—Ä–∞–≥–æ–≤!",
            "–∫—Ä–∏—á–∏—Ç '–í—ã –¥–∞–∂–µ –±–ª–∏–∑–∫–æ –Ω–µ —Å—Ç–æ–∏—Ç–µ!'"
        ];
        let taunt = taunts[Math.floor(Math.random() * taunts.length)];
        Chat.Broadcast(`üòù ${sender.NickName} ${taunt}`);
    }

    // ======================= üèÜ –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ò–ñ–ï–ù–ò–ô =======================
    else if (mt === '/achievements') {
        let achievements = [];
        
        if (sender.Properties.Get('KingSlayer').Value) {
            achievements.push("üî™ –£–±–∏–π—Ü–∞ –ö–æ—Ä–æ–ª—è");
        }
        if (sender.Properties.Kills.Value >= 10) {
            achievements.push(`‚öîÔ∏è –í–µ—Ç–µ—Ä–∞–Ω (${sender.Properties.Kills.Value} —É–±–∏–π—Å—Ç–≤)`);
        }
        if (sender.Properties.Scores.Value >= 5000) {
            achievements.push(`üí∞ –ë–æ–≥–∞—á (${sender.Properties.Scores.Value} –∫—Ä–µ–¥–∏—Ç–æ–≤)`);
        }
        
        if (achievements.length > 0) {
            sender.Ui.Hint.Value = "üèÜ –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n" + achievements.join("\n");
        } else {
            sender.Ui.Hint.Value = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å!";
        }
    }
});

// ======================= üõ† –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =======================
function countTeamRole(team, role) {
    return team.Players.filter(p => p.Properties.Get('Role').Value === role).length;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã
function InitializeMap() {
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–æ–Ω–Ω—ã–µ –∑–∞–ª—ã –¥–ª—è –∫–æ–º–∞–Ω–¥
    const blueThronePos = new Vector3(-50, 5, 0);
    const redThronePos = new Vector3(50, 5, 0);
    
    // –°–∏–Ω–∏–π —Ç—Ä–æ–Ω–Ω—ã–π –∑–∞–ª
    MapEditor.CreateCuboid(
        new Vector3(-60, 0, -10),
        new Vector3(-40, 15, 10),
        BuildBlocksSet.Blue
    );
    
    // –ö—Ä–∞—Å–Ω—ã–π —Ç—Ä–æ–Ω–Ω—ã–π –∑–∞–ª
    MapEditor.CreateCuboid(
        new Vector3(40, 0, -10),
        new Vector3(60, 15, 10),
        BuildBlocksSet.Red
    );
    
    // –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è
    MapEditor.CreateCuboid(
        new Vector3(-30, 0, -30),
        new Vector3(30, 5, 30),
        BuildBlocksSet.Grass
    );
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–æ–Ω—ã
    MapEditor.CreateBlock(blueThronePos, BuildBlocksSet.Gold);
    MapEditor.CreateBlock(redThronePos, BuildBlocksSet.Gold);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
InitializeMap();
